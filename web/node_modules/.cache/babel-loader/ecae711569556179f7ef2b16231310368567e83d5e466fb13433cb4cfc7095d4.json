{"ast":null,"code":"var _jsxFileName = \"/home/thiago/www/cursos/dio/chat-gpt-clone/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\nimport { getPrompt } from \"./api/api.js\";\nimport { SideMenu } from \"./components/SideMenu/SideMenu\";\nimport { ChatMessage } from \"./components/ChatMessage/ChatMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setinput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje ?\"\n  }]);\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const prompt = input;\n    let response = await getPrompt(prompt);\n    response = response.data.split(\"\\n\").map(linha => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: linha\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 57\n    }, this));\n    setChatLog([...chatLog, {\n      user: \"me\",\n      message: input\n    }]);\n    setChatLog([...chatLog, {\n      user: \"gpt\",\n      message: response\n    }]);\n    setinput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: item.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setinput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gZPEc1BNk3Z9/pSFtNuZKqztrPU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","getPrompt","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setinput","chatLog","setChatLog","user","message","handleSubmit","evt","preventDefault","prompt","response","data","split","map","linha","children","fileName","_jsxFileName","lineNumber","columnNumber","className","item","index","onSubmit","rows","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/thiago/www/cursos/dio/chat-gpt-clone/web/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\n\nimport { getPrompt } from \"./api/api.js\";\nimport { SideMenu } from \"./components/SideMenu/SideMenu\";\nimport { ChatMessage } from \"./components/ChatMessage/ChatMessage\";\n\nfunction App() {\n  const [input, setinput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([\n    {\n      user: \"gpt\",\n      message: \"Como posso te ajudar hoje ?\",\n    },\n  ]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const prompt = input;\n    let response = await getPrompt(prompt);\n    response = response.data.split(\"\\n\").map((linha) => <p>{linha}</p>);\n\n    setChatLog([...chatLog, { user: \"me\", message: input }]);\n    setChatLog([...chatLog, { user: \"gpt\", message: response }]);\n    setinput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <SideMenu></SideMenu>\n      <section className=\"chatbox\">\n        <div className=\"chat-log\">\n          {chatLog.map((item, index) => {\n            return (\n              <ChatMessage key={index} message={item.message}></ChatMessage>\n            );\n          })}\n        </div>\n        <div className=\"chat-input-holder\">\n          <form onSubmit={handleSubmit}>\n            <input\n              rows=\"1\"\n              className=\"chat-input-textarea\"\n              value={input}\n              onChange={(e) => setinput(e.target.value)}\n            />\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}